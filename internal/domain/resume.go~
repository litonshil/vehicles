package domain

import (
	"context"
)

// Resume struct for unmarshalling BSON data
type Resume struct {
	ID                        string       `json:"id" bson:"_id"`
	Name                      string       `json:"name" bson:"name"`
	Contact                   Contact      `json:"contact" bson:"contact"`
	Education                 []Education  `json:"education" bson:"education"`
	Skills                    []Skill      `json:"skills" bson:"skills"`
	Experience                []Experience `json:"experience" bson:"experience"`
	Certifications            []string     `json:"certifications" bson:"certifications"`
	Languages                 []string     `json:"languages" bson:"languages"`
	Hobbies                   []string     `json:"hobbies" bson:"hobbies"`
	VolunteerExperience       []string     `json:"volunteerExperience" bson:"volunteerExperience"`
	References                []string     `json:"references" bson:"references"`
	Publications              []string     `json:"publications" bson:"publications"`
	Patents                   []string     `json:"patents" bson:"patents"`
	Awards                    []string     `json:"awards" bson:"awards"`
	TextSearchString          string       `json:"textSearchString" bson:"TextSearchString"`
	//DateOfBirth               string       `json:"dateOfBirth" bson:"dateOfBirth"`
	RandomRating              float64      `json:"randomRating" bson:"randomRating"`
	YearsSinceProfileCreation int          `json:"yearsSinceProfileCreation" bson:"yearsSinceProfileCreation"`
}

type Contact struct {
	Email string `json:"email" bson:"email"`
	Phone string `json:"phone" bson:"phone"`
}

type Education struct {
	Name     string `json:"name" bson:"name"`
	Location string `json:"location" bson:"location"`
	Ranking  int    `json:"ranking" bson:"ranking"`
	Type     string `json:"type" bson:"type"`
	Field    string `json:"field" bson:"field"`
	Honors   string `json:"honors" bson:"honors"`
}

type Skill struct {
	Name        string `json:"name" bson:"name"`
	Proficiency string `json:"proficiency" bson:"proficiency"`
	Experience  string `json:"experience" bson:"experience"`
}

type Experience struct {
	Company  Company   `json:"company" bson:"company"`
	Position string    `json:"position" bson:"position"`
	Projects []Project `json:"projects" bson:"projects"`
}

type Company struct {
	Name     string `json:"name" bson:"name"`
	Industry string `json:"industry" bson:"industry"`
	Location string `json:"location" bson:"location"`
}

type Project struct {
	ProjectName  string       `json:"projectName" bson:"projectName"`
	Technologies []Technology `json:"technologies" bson:"technologies"`
	Duration     string       `json:"duration" bson:"duration"`
}

type Technology struct {
	Name    string `json:"name" bson:"name"`
	Version string `json:"version" bson:"version"`
}

type ResumeFilter struct {
	Name         string
	Email        string
	Phone        string
	OtherFilters map[string]string // For additional dynamic fields
	Page         int
	Limit        int
}

type ResumeRepository interface {
	GetResumes(ctx context.Context, filter ResumeFilter, offset, limit int) ([]Resume, int, error)
}

type ResumeUseCase interface {
	GetResumes(ctx context.Context, filter ResumeFilter, page, limit int) ([]Resume, int, error)
}
