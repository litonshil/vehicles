package controllers

import (
	"context"
	"github.com/labstack/echo/v4"
	"net/http"
	"vehicles/internal/domain"
	"strconv"
)

type ResumeController struct {
	baseCtx  context.Context
	resumeuc domain.ResumeUseCase
}

func NewResumeController(
	baseCtx context.Context,
	resumeuc domain.ResumeUseCase,
) *ResumeController {
	return &ResumeController{
		baseCtx:  baseCtx,
		resumeuc: resumeuc,
	}
}

func (cntlr *ResumeController) GetResumes(c echo.Context) error {
	page, _ := strconv.Atoi(c.QueryParam("page"))
	limit, _ := strconv.Atoi(c.QueryParam("limit"))
	if page < 1 {
		page = 1
	}
	if limit < 1 {
		limit = 10
	}

	// Parse filters
	filter := domain.ResumeFilter{
		Name:  c.QueryParam("name"),
		Email: c.QueryParam("email"),
		Phone: c.QueryParam("phone"),
	}

	// Call service layer
	resumes, totalCount, err := cntlr.resumeuc.GetResumes(c.Request().Context(), filter, page, limit)
	if err != nil {
		return c.JSON(http.StatusInternalServerError, echo.Map{
			"error": "Failed to fetch resumes",
		})
	}

	// Respond with results
	return c.JSON(http.StatusOK, echo.Map{
		"page":  page,
		"limit": limit,
		"total": totalCount,
		"data":  resumes,
	})

}


